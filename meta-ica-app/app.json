{
    "id": "wallen-meta-ica",
    "version": "1.0.0",
    "description": "MELODIC (Multivariate Exploratory Linear Optimized Decomposition into Independent Components) 3.0 uses Independent Component Analysis to decompose a single or multiple 4D data sets into different spatial and temporal components. For ICA group analysis, MELODIC uses either Tensorial Independent Component Analysis (TICA, where data is decomposed into spatial maps, time courses and subject/session modes) or a simpler temporal concatenation approach. MELODIC can pick out different activation and artefactual components without any explicit time series model being specified.",
    "owner": "${apiUserId}",
    "enabled": true,
    "runtime": "SINGULARITY",
    "runtimeVersion": null,
    "runtimeOptions": [
        "SINGULARITY_RUN"
    ],
    "containerImage": "docker://wjallen/meta-ica:1.0.0",
    "jobType": "BATCH",
    "maxJobs": -1,
    "maxJobsPerUser": -1,
    "strictFileInputs": false,
    "jobAttributes": {
        "description": "Meta Independent Component Analysis (ICA) with FSL Melodic",
        "dynamicExecSystem": false,
        "execSystemConstraints": null,
        "execSystemId": "tacc.lonestar6.wallen",
        "execSystemExecDir": "${JobWorkingDir}",
        "execSystemInputDir": "${JobWorkingDir}",
        "execSystemOutputDir": "${JobWorkingDir}",
        "execSystemLogicalQueue": "normal",
        "archiveSystemId": "tacc.lonestar6.wallen",
        "archiveSystemDir": "HOST_EVAL($STOCKYARD)/tapis/archive/${JobCreateDate}/${JobName}-${JobUUID}",
        "archiveOnAppError": true,
        "isMpi": false,
        "mpiCmd": null,
        "cmdPrefix": null,
        "nodeCount": 1,
        "coresPerNode": 1,
        "memoryMB": 100,
        "maxMinutes": 600,
        "subscriptions": [],
        "tags": [],
        "fileInputs": [
            {
                "name": "Foci Text",
                "description": "A text file of foci data in MNI or Talairach format",
                "inputMode": "REQUIRED",
                "autoMountLocal": true,
                "sourceUrl": null,
                "targetPath": "*"
            }
        ],
        "fileInputArrays": [],
        "parameterSet": {
            "appArgs": [
                {
                    "name": "Default run command",
                    "description": "Default run command",
                    "arg": "/bin/bash /app/run.sh",
                    "notes": { 
                        "isHidden": true
                    }
                },
                {
                    "name": "Coordinate Space",
                    "description": "Specify the format of the input foci data",
                    "inputMode": "REQUIRED",
                    "arg": "Tal_wb",
                    "notes": {
                        "enum_values": [
                            {
                                "Tal_wb": "Talairach"
                            },
                            {
                                "MNI152_wb": "MNI"
                            }
                        ]
                    }
                },
                {
                    "name": "Mask Size",
                    "description": "Specify more conservative (smaller) or less conservative (dilated by 2mm) masks",
                    "inputMode": "REQUIRED",
                    "arg": ".nii.gz",
                    "notes": {
                        "enum_values": [
                            {
                                ".nii.gz": "More Conservative (Smaller)"
                            },
                            {
                                "_dil.nii.gz": "Less Conservative (Dilated 2mm)"
                            }
                        ]
                    }
                },
                {
                    "name": "Dimensionality Reduction",
                    "description": "Dimensionality reduction into #num dimensions",
                    "inputMode": "REQUIRED",
                    "arg": "20",
                    "notes": {}
                },
                {
                    "name": "Filtering",
                    "description": "Specify the type of filtering to apply to the input data before Meta ICA",
                    "inputMode": "REQUIRED",
                    "arg": "0",
                    "notes": {
                        "enum_values": [
                            {
                                "0": "No Filtering"
                            },
                            {
                                "1": "Experiment-level filtering"
                            },
                            {
                                "2": "Paper-level filtering"
                            }
                        ]
                    }
                }
            ],
            "containerArgs": [
                {
                    "name": "Mounts required to use Matlab",
                    "description": "Mounts required to use Matlab",
                    "inputMode": "FIXED",
                    "arg": " --bind /opt/intel:/opt/intel ",
                    "notes": {
                        "isHidden": true
                    }
                }
            ],
            "schedulerOptions": [
                {
                    "name": "brainmap-matlab",
                    "description": "Scheduler Profile for BrainMap Apps that Require Matlab",
                    "inputMode": "FIXED",
                    "arg": "--tapis-profile brainmap-matlab",
                    "notes": {
                        "isHidden": true
                    }
                }
            ],
            "envVariables": [],
            "archiveFilter": {
                "includes": [],
                "excludes": [],
                "includeLaunchFiles": true
            }
        }
    },
    "tags": [
        "portalName: CEP",
        "portalName: Brainmap"
    ],
    "notes": {
        "label": "Meta ICA",
        "helpUrl": "https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/MELODIC",
        "hideNodeCountAndCoresPerNode": true,
        "isInteractive": false,
        "icon": null,
        "category": "Analysis",
        "queueFilter": [
            "development",
            "normal",
            "vm-small"
        ]
    }
}
